<?php
// $Id: linkpoint_api.module,v 1.3 2005/10/12 04:06:07 mathias Exp $

/********************************************************************
 * Drupal Hooks
 ********************************************************************/

/**
 * Implementation of hook_menu().
 */
function linkpoint_api_menu($may_cache) {

  $items = array();

  if ($may_cache) {
   $items[] = array('path' => 'linkpoint_api/form', 'title' => t('Credit Card Payment'),
      'callback' => 'linkpoint_api_page', 'access' => true, 'type' => MENU_CALLBACK);
  }
  return $items;
}

/**
 * Implementation of hook_help().
 */
function linkpoint_api_help($section = 'admin/help#linkpoint_api') {

  switch ($section) {
    case 'admin/modules#description':
      return t('Process payments using Linkpoint.com.');

    case 'admin/settings/linkpoint_api':
      return t("You need to have an Linkpoint merchant account in order to use this module.");

    case 'linkpoint_api/form_submit_guidlines':
      return t("Do not submit this form twice, or you may be double billed!");
  }
}

function linkpoint_api_settings() {
  $output  = form_textarea(t('Explanation or submission guidelines'), 'linkpoint_api_help', variable_get('linkpoint_api_help', linkpoint_api_help('linkpoint_api/form_submit_guidlines')), 70, 5, t('This text will be displayed at the top of the credit card submission form.'));
  $output .= form_textfield(t('Login ID'), 'linkpoint_api_login', variable_get('linkpoint_api_login', ''), 70, 180, t("Enter your merchant login ID."));
  $output .= form_textfield(t('Transaction key'), 'linkpoint_api_tran_key', variable_get('linkpoint_api_tran_key', ''), 70, 180, t("Enter your merchant transaction key."));
  $output .= form_textfield(t('Linkpoint processing URL'), 'linkpoint_api_url', variable_get('linkpoint_api_url', 'https://secure.authorize.net/gateway/transact.dll'), 70, 180, t('URL of the secure payment processing page.'));
  $output .= form_textfield(t('Successful payment URL'), 'linkpoint_api_success_url', variable_get('linkpoint_api_success_url', 'node'), 70, 180, t("This is the destination to which you would like to send your customers when their payment has been successfully completed. The URL must be a Drupal system path. If you are not using clean URLs, specify the part after '?q='. If unsure, specify 'node'."));
  $output .= form_radios(t('Linkpoint test mode'), 'linkpoint_api_debug', variable_get('linkpoint_api_debug', 0), array(t('Disabled'), t('Enabled')), t('If enabled, transactions will be sent in test mode and cards will not be charged.'));
  $output .= form_radios(t('Email Linkpoint Reciept'), 'linkpoint_api_email_customer', variable_get('linkpoint_api_email_customer', 1), array(t('Disabled'), t('Enabled')), t('If enabled, the customer will recieve a payment confirmation email from Authorize.Net. Keep in mind the ecommerce package sends it own transaction summary as well. Enabling this option is recommended because it provides the customer with an accurate confirmation of the amount you have charged.'));

  return $output;
}

/**
 * Implementation of hook_paymentapi().
 */
function linkpoint_api_paymentapi(&$data, $op) {

  switch ($op) {

    case 'display name':
      return t('Pay with credit card');

    case 'update':
    case 'insert':
      return linkpoint_api_save($data);

    case 'payment page':
      return linkpoint_api_goto($data);

    case 'delete':
      return linkpoint_api_delete($data);
  }
}

function linkpoint_api_delete($data) {
  db_query('DELETE FROM {ec_linkpoint_api} WHERE txnid = %d', $data['txnid']);
}

/**
 * Called immediately after the user has clicked the checkout button.
 *
 * Redirect the user to the secure server to collect credit card information.
 */
function linkpoint_api_goto($edit, $txnid = true) {

  global $base_url;
  $payment_url = str_replace('http://', 'https://', $base_url). '/'. url("linkpoint_api/form/". $edit['txnid']);

  /* I can't use drupal_goto() becuase I need to go to a https */
  header("Location: $payment_url");
  exit();
}

/**
 * Controller for collecting and processing credit card data.
 */
function linkpoint_api_page($txnid = null) {

  $edit = $_POST['edit'];
  $op   = $_POST['op'];

  switch ($op) {
    case t('Place your order'):
      if (linkpoint_api_validate($edit)) {
        linkpoint_api_process($edit);
      }
      else {
        $output = linkpoint_api_form($edit['txnid']);
      }
      break;

    default:
      $output = linkpoint_api_form($txnid);
  }

  print theme('page', $output, $title);
}

/**
 * Build the credit card form.
 */
function linkpoint_api_form($txnid) {
  global $user, $base_url;

  $t = store_transaction_load($txnid);

  //Make sure the user owns the transaction or is admin.
  if ($user->uid != $t->uid && $user->uid != 1) {
    drupal_access_denied();
  }

  //Make sure the user is connected via SSL
  if (!$_SERVER['HTTPS']) {
    drupal_access_denied();
  }

  if ($t->items) {
    foreach ($t->items as $p) {
      $product = product_load($p);
      $subtotal += $p->qty * $p->price;
      $items[] = t('%order of <b>%title</b> at %price each', array('%order' => format_plural($p->qty, '1 order', '%count orders'), '%title' => $p->title, '%price' => payment_format(product_adjust_price($product)))). "\n";
    }
  }

  $output = t('<div class="help">%linkpoint_api_help</div>', array('%linkpoint_api_help' => variable_get('linkpoint_api_help', linkpoint_api_help('linkpoint_api/form_submit_guidlines'))));

  $output .= '<p>'. theme('item_list', $items, t('Your items')). '</p>';

  // Prepare the values of the form fields.
  $years  = drupal_map_assoc(range(2004, 2020));
  $months = drupal_map_assoc(array('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'));

  $m_field = form_select(t('Month'), 'cc_month', ($month ? $month : date('m')), $months, null, 0, false, true);
  $y_field = form_select(t('Year'), 'cc_year', ($year ? $year : date('Y')), $years, null, 0, false, true);
  $exp_fields = form_group(t('Expiration Date'), $m_field . $y_field);

  $fields = '';
  $fields .= form_textfield(t('Credit Card Number'), 'cc_number', '', 21, 21, null, null, true);
  $fields .= $exp_fields;
  //$fields .= form_textfield(t('Three digit number on back of card'), 'ccv', '', 3, 3, null, null, true);
  //$fields .= form_textfield(t('Phone Number'), 'phone', '', 21, 21, null, null, true);

  $output .= form_group(t('Details'), $fields);
  $output .= form_hidden('txnid', $txnid);
  $output .= form_submit(t('Place your order'));

  return form($output, 'POST', str_replace('http://', 'https://', $base_url). '/'. url("linkpoint_api/form/". $txnid));
}

/**
 * Ensure the integrity of the user-submitted data.
 */
function linkpoint_api_validate($edit) {
  $errors = array();
  if (!$edit['cc_number']) {
    $errors['cc_number'] = t('You must enter a credit card number.');
  }
  elseif (!is_numeric($edit['cc_number'])) {
    $errors['cc_number'] = t('Error in credit card number. Please make sure it is typed correctly.');
  }

  foreach ($errors as $name => $message) {
    form_set_error($name, $message);
  }

  return count($errors) == 0;
}

function linkpoint_api_save($edit) {
  if (is_numeric($edit['txnid']) && is_numeric($edit['anid'])) {

    if (db_result(db_query("SELECT COUNT(txnid) FROM {ec_linkpoint_api} WHERE txnid = '%s'", $edit['txnid']))) {
      db_query("UPDATE {ec_linkpoint_api} SET anid = '%s', amount = '%f' WHERE txnid = %d", $edit['anid'], $edit['amount'], $edit['txnid']);
    }
    else {
      db_query("INSERT INTO {ec_linkpoint_api} (txnid, anid, amount) VALUES (%d, '%s', '%f')", $edit['txnid'], $edit['anid'], $edit['amount']);
    }
  }

}

/**
 * Send the HTTPS POST request and process the returned data.
 */
function linkpoint_api_process($edit) {

  $t = store_transaction_load($edit['txnid']);

  global $user;
  //Make sure the user owns the transaction or is admin.
  if ($user->uid != $t['uid'] && $user->uid != 1) {
    drupal_access_denied();
  }

  //Make sure the user is connected via SSL
  if (!$_SERVER['HTTPS']) {
    drupal_access_denied();
  }

  $d['configfile'] = variable_get('linkpoint_api_login', '');

  $d['result'] = 'LIVE';
  $d['cert'] = variable_get('linkpoint_api_tran_key', '');

  $xml ="<order>";
  $xml .="<billing>";
  $xml .="<name>" . $t['billing_firstname'] . " " . $t['billing_lastname'] ."</name>";
  $xml .="<address1>" . $t['billing_street1'] . "</address1>";
  $xml .="<city>" . $t['billing_city'] . "</city>";
  $xml .="<state>" . $t['billing_state'] . "</state>";
  $xml .="<zip>" . $t['billing_zip'] . "</zip>";
  //$xml .="<country>" . address_get_country($t['billing_country']) . "</country>";
  $xml .="<email>" . $t['mail'] . "</email>";
  $xml .="</billing>";
  $xml .="<shipping>";
  $xml .="<name>" . $t['shipping_firstname'] . " " . $t['shipping_lastname'] ."</name>";
  $xml .="<address1>" . $t['shipping_street1'] . "</address1>";
  $xml .="<city>" . $t['shipping_city'] . "</city>";
  $xml .="<state>" . $t['shipping_state'] . "</state>";
  $xml .="<zip>" . $t['shipping_zip'] . "</zip>";
  //$xml .="<country>" . address_get_country($t['shipping_country']) . "</country>";
  $xml .="</shipping>";
  $xml .="<orderoptions>";
  $xml .="<result>" . $d['result'] . "</result>";
  $xml .="<ordertype>SALE</ordertype>";
  $xml .="</orderoptions>";
  $xml .="<merchantinfo>";
  $xml .="<configfile>" . $d['configfile'] . "</configfile>";
  $xml .="</merchantinfo>";
  $xml .="<creditcard>";
  $xml .="<cardnumber>" . $edit['cc_number'] . "</cardnumber>";
  $xml .="<cardexpmonth>" . $edit['cc_month'] . "</cardexpmonth>";
  $xml .="<cardexpyear>" . substr($edit['cc_year'],2,2) . "</cardexpyear> ";
  $xml .="</creditcard>";
  $xml .="<payment>";
  $xml .="<chargetotal>" . $t['gross'] . "</chargetotal>";
  $xml .="</payment>";
  $xml .="<transactiondetails>";
  $xml .="<transactionorigin>ECI</transactionorigin>";
  $xml .="<oid>" . $edit['txnid'] . "</oid>";
  $xml .="<ip>" . $_SERVER['REMOTE_ADDR'] . "</ip>";
  $xml .="</transactiondetails>";
  $xml .="</order>";

  global $base_url;
  $payment_url = str_replace('http://', 'https://', $base_url). '/'. url('linkpoint_api/form/'. $edit['txnid']);
  $agent = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)";

  // Start CURL session
  $ch = curl_init();

  curl_setopt($ch, CURLOPT_URL, variable_get('linkpoint_api_url', 'https://secure.linkpt.net:1129/LSGSXML'));
  curl_setopt($ch, CURLOPT_POST, 1);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $xml);
  curl_setopt($ch, CURLOPT_SSLCERT, $d['cert']);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

  $buffer = curl_exec($ch);
  curl_close($ch);

  if (strlen($buffer) < 2) {
    $buffer = "<r_error>Sorry - Could not connect to payment gateway.</r_error>";
  }

  preg_match_all ("/<(.*?)>(.*?)\</", $buffer, $outarr, PREG_SET_ORDER);

  $n = 0;
  while (isset($outarr[$n])) {
    $retarr[$outarr[$n][1]] = strip_tags($outarr[$n][0]);
    $n++;
  }

  switch ($retarr['r_approved']) {

    case "APPROVED": // Credit card successfully charged
      $edit['anid']      = $retarr['r_ordernum'];
      $edit['amount']    = $t['gross'];
      $edit['payment_status'] = payment_get_status_id('completed');
      $edit['payment_method'] = 'linkpoint_api';

      $is_new = (db_result(db_query('SELECT COUNT(txnid) FROM {ec_linkpoint_api} WHERE txnid = %d', $edit['txnid']))) ? false : true;
      $txnid = store_transaction_save($edit);

      if ($is_new && $txnid) {
        // Compose and send confirmation email to the user
        store_send_invoice_email($txnid);
      }

      // We want to go to a http, not https.
      $goto = str_replace('https://', 'http://', $base_url);
      drupal_set_message("Thanks!  Your order has been accepted.  You will receive confirmation by email shortly.");
      header("Location: $goto". '/store/transaction/view/' . $edit['txnid']);
      exit();
      break;

    default: // Credit card error: card was not charged.
      drupal_set_message(t('%linkpoint_api_error', array('%linkpoint_api_error' => $retarr['r_error'])), 'error');
      header("Location: $payment_url");
      exit();
      break;
  }
}

?>
