<?php
// $Id: tangible.module,v 1.12.2.1 2005/10/30 19:07:11 mathias Exp $

/********************************************************************
 * Drupal Hooks
 ********************************************************************/

function tangible_help($section = 'admin/help#tangible') {
  switch ($section) {
    case 'admin/modules#description':
      return t('Creates a tangible product. Dependency: product.module');
  }
}

function tangible_productapi(&$node, $op, $a3 = null, $a4 = null) {

  switch ($op) {

    case 'fields':
      return array('stock' => $node->stock, 'manage_stock' => $node->manage_stock, 'availability' => $node->availability);

    case 'validate':
      if (isset($node->stock) && !$node->stock) {
        if (!$node->stock) {
          $node->stock = 0;
        }
        if (!is_numeric($node->stock)) {
          form_set_error('stock', t('Please enter a numeric value for stock.'));
        }
      }
      break;

    case 'wizard_select':
      return array('tangible' => t('shippable product'));

    case 'in_stock':
      return $node->manage_stock ? ($node->stock > 0 ? true : false) : true;

    case 'is_shippable':
      return array(true);
      break;

    case 'on payment completion':
      if ($node->manage_stock) {
        db_query('UPDATE {ec_product_tangible} SET stock = %d WHERE nid = %d', $node->stock - $node->qty, $node->nid);
      }
      break;

    case 'form':
      $group = form_radios(t('Inventory management for this item'), 'manage_stock', (($node->manage_stock == 0) ? $node->manage_stock : 1), array(t('Disabled'), t('Enabled')), t("When enabled, the number in stock will be decremented whenever an order of this item is made. When stock reaches zero, the 'Add to cart' will be replaced with 'Sold out'."));
      $group .= form_textfield(t("Number in stock"), "stock", (($node->stock != '') ? $node->stock : 0), 25, 50, t("Number of products in inventory."));
      $output = form_group(t("Inventory control"), $group);

      $output .= form_select(t("Availability estimate"), 'availability', $node->availability, availability_build_messages(), t("How long it will take this item to leave the fulfillment center once the order has been placed?"));
      return $output;

    case 'load':
      return db_fetch_object(db_query('SELECT * FROM {ec_product_tangible} WHERE nid = %d', $node->nid));

    case 'insert':
      return db_query("INSERT INTO {ec_product_tangible} (nid, stock, manage_stock, availability) VALUES ('%d', '%d', '%d', '%s')", $node->nid, $node->stock, $node->manage_stock, $node->availability);

    case 'update':
      return db_query("UPDATE {ec_product_tangible} SET stock = '%d', manage_stock = '%d', availability = '%s' WHERE nid = '%d'", $node->stock, $node->manage_stock, $node->availability, $node->nid);

    case 'delete':
      return db_query('DELETE FROM {ec_product_tangible} WHERE nid = %d', $node->nid);
  }
}

function availability_get_message($aid) {
  $availability = availability_build_messages();
  return $availability[$aid];
}

function availability_build_messages() {
  return array(
    1 => t('--none--'),
    2 => t('Usually ships in 24 hours.'),
    3 => t('Usually ships in 2-3 days.'),
    4 => t('Usually ships in 1-2 weeks.'),
    5 => t('Usually ships in 4-6 weeks.'),
  );
}

?>
